name: Publish Packages

on:
  release:
    types: [published]

permissions:
  contents: read
  id-token: write # Required for Azure authentication

env:
  RELEASE_TAG: ${{ github.ref_name }}

jobs:
  publish-railtracks:
    name: Publish Railtracks Core
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flit

      - name: Normalize version number
        run: |
          VERSION_CLEANED=${{ env.RELEASE_TAG }}
          VERSION_CLEANED=${VERSION_CLEANED#v}  # Remove 'v' if present
          echo "VERSION_CLEANED=$VERSION_CLEANED" >> $GITHUB_ENV
          echo "Publishing railtracks version: $VERSION_CLEANED"

      - name: Update version in railtracks __init__.py
        run: |
          sed -i -E 's/__version__ = ".+"/__version__ = "'"$VERSION_CLEANED"'"/' packages/railtracks/src/railtracks/__init__.py
          echo "Updated railtracks __init__.py to version $VERSION_CLEANED"

      - name: Build and Publish Railtracks Core to Azure Artifacts
        env:
          FLIT_INDEX_URL: 'https://pkgs.dev.azure.com/railtownai/ML/_packaging/railtownai_rc/pypi/upload/'
          FLIT_USERNAME: 'AZURE'
          FLIT_PASSWORD: ${{ secrets.AZURE_ARTIFACTS_PAT }}
        run: |
          cd packages/railtracks
          flit publish

      - name: Build and Publish Railtracks Core to PyPI
        if: false
        env:
          FLIT_INDEX_URL: 'https://pypi.org/simple'
          FLIT_USERNAME: '__token__'
          FLIT_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          cd packages/railtracks
          flit publish

  publish-railtracks-cli:
    name: Publish Railtracks CLI
    runs-on: ubuntu-latest
    needs: publish-railtracks # Ensure CLI publishes after core package
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flit

      - name: Normalize version number
        run: |
          VERSION_CLEANED=${{ env.RELEASE_TAG }}
          VERSION_CLEANED=${VERSION_CLEANED#v}  # Remove 'v' if present
          echo "VERSION_CLEANED=$VERSION_CLEANED" >> $GITHUB_ENV
          echo "Publishing railtracks-cli version: $VERSION_CLEANED"

      - name: Update version in railtracks-cli __init__.py
        run: |
          sed -i -E 's/__version__ = ".+"/__version__ = "'"$VERSION_CLEANED"'"/' packages/railtracks-cli/src/railtracks_cli/__init__.py
          echo "Updated railtracks-cli __init__.py to version $VERSION_CLEANED"

      - name: Build and Publish Railtracks CLI
        env:
          FLIT_INDEX_URL: 'https://pkgs.dev.azure.com/railtownai/ML/_packaging/railtownai_rc/pypi/upload/'
          FLIT_USERNAME: 'AZURE'
          FLIT_PASSWORD: ${{ secrets.AZURE_ARTIFACTS_PAT }}
        run: |
          cd packages/railtracks-cli
          flit publish

      - name: Build and Publish Railtracks CLI to PyPI
        if: false
        env:
          FLIT_INDEX_URL: 'https://pypi.org/simple'
          FLIT_USERNAME: '__token__'
          FLIT_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          cd packages/railtracks-cli
          flit publish
