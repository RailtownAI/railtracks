name: Publish to Azure Artifacts on Release

on:
  release:
    types: [published]

permissions:
  contents: read
  id-token: write # Required for Azure authentication

env:
  RELEASE_TAG: ${{ github.ref_name }}

jobs:
  publish:
    name: Publish Railtracks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flit

      - name: Normalize version number
        run: |
          VERSION_CLEANED=${{ env.RELEASE_TAG }}
          VERSION_CLEANED=${VERSION_CLEANED#v}  # Remove 'v' if present
          echo "VERSION_CLEANED=$VERSION_CLEANED" >> $GITHUB_ENV
          echo "Publishing version: $VERSION_CLEANED"

      - name: Update version in __init__.py files
        run: |
          sed -i -E 's/__version__ = ".+"/__version__ = "'"$VERSION_CLEANED"'"/' src/railtracks/__init__.py
          sed -i -E 's/__version__ = ".+"/__version__ = "'"$VERSION_CLEANED"'"/' railtracks-cli/src/railtracks/__init__.py
          echo "Updated __init__.py files to version $VERSION_CLEANED"

      # Publish CLI package first (required dependency for railtracks[cli])
      - name: Publish railtracks-cli to PyPI
        env:
          FLIT_INDEX_URL: 'https://pypi.org/pypi'
          FLIT_USERNAME: '__token__'
          FLIT_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          cd railtracks-cli
          flit publish
          echo "Published railtracks-cli to PyPI"

      # Then publish main package (which references railtracks-cli in optional dependencies)
      - name: Publish railtracks to PyPI
        env:
          FLIT_INDEX_URL: 'https://pypi.org/pypi'
          FLIT_USERNAME: '__token__'
          FLIT_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          flit publish
          echo "Published railtracks to PyPI"
