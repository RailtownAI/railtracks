name: PR Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ruff-lint:
    name: Check Code Formatting and Linting with Ruff
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' # Specify the Python version you are using

      - name: Install Ruff
        run: pip install ruff

      - name: Run Ruff Lint Check
        run: ruff check . --no-fix

      - name: Run Ruff Format Check
        run: ruff format --check .

  check-licenses:
    name: Check Licenses
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Run License Check
        run: |
          chmod +x scripts/check_licenses.sh
          ./scripts/check_licenses.sh

      - name: License Check Analysis
        if: always()
        run: |
          if [ -f core-licenses-summary.md ]; then
            cat core-licenses-summary.md >> $GITHUB_STEP_SUMMARY
            echo "### ðŸ“¦ Licenses Found" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            cat core-licenses.md >> $GITHUB_STEP_SUMMARY
          fi

  unit_tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs:
      - ruff-lint
      - check-licenses

    steps:
      - name: Print System Architecture
        run: uname -m

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e packages/railtracks[all]
          pip install -e packages/railtracks-cli
          pip install -r docs/scripts/requirements.txt
          pip install tomlkit==0.11.8
          pip install pytest>=8.4.0 
          pip install pytest-asyncio 
          pip install pytest-timeout
          pip install pytest-cov

      - name: Check pyproject.toml dependency order
        run: |
          python scripts/check_dependencies_sorted.py

      - name: Run tests
        shell: bash
        run: |
          pytest -s -v --junit-xml=unit-test-results.xml packages/railtracks/tests/unit_tests/ packages/railtracks/tests/integration_tests/ --ignore=packages/railtracks/tests/integration_tests/rag/
  
  documentation_validation:
    name: Documentation Validation
    runs-on: ubuntu-latest
    needs:
      - ruff-lint
      - check-licenses

    steps:
      - name: Print System Architecture
        run: uname -m

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e packages/railtracks[all]
          pip install -r docs/scripts/requirements.txt
          pip install mypy

      - name: Validate documentation
        run: |
          ./scripts/docs_validation.sh

  pyproject_dependency_order:
    name: Validate pyproject.toml Dependency Order
    runs-on: ubuntu-latest
    needs:
      - ruff-lint
      - check-licenses

    steps:
      - name: Print System Architecture
        run: uname -m

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tomlkit==0.11.8

      - name: Check pyproject.toml dependency order
        run: |
          python scripts/check_dependencies_sorted.py

  end_to_end_tests:
    name: End-to-End Tests
    runs-on: windows-latest
    environment:
      name: Test
    needs:
      - ruff-lint
      - check-licenses
      - unit_tests
      - documentation_validation
      - pyproject_dependency_order

    steps:
      - name: Print System Architecture
        run: uname -m

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e packages/railtracks[all]
          pip install -e packages/railtracks-cli
          pip install -r docs/scripts/requirements.txt
          pip install tomlkit==0.11.8
          pip install pytest>=8.4.0 
          pip install pytest-asyncio 
          pip install pytest-timeout
          pip install pytest-cov

      - name: Run tests
        shell: bash
        env:
          OPENAI_API_KEY: ${{ secrets.INTEGRATION_TESTS_OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.INTEGRATION_TESTS_ANTHROPIC_API_KEY }}
          HF_TOKEN: ${{ secrets.INTEGRATION_TESTS_HUGGINGFACE_API_KEY }}
          GEMINI_API_KEY: ${{ secrets.INTEGRATION_TESTS_GEMINI_API_KEY }}
        
        run: |
          pytest -s -v --junit-xml=integration-test-results.xml  packages/railtracks/tests/end_to_end packages/railtracks/tests/llm_live_tests packages/railtracks/tests/integration_tests/rag/
          
  build-railtracks-cli:
    name: Test Railtracks CLI
    runs-on: ubuntu-latest
    needs: 
      - ruff-lint
      - check-licenses

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        working-directory: packages/railtracks-cli
        run: |
          python -m pip install --upgrade pip
          pip install -e ../railtracks
          pip install -e .

      - name: Run tests
        shell: bash
        working-directory: packages/railtracks-cli
        continue-on-error: true
        run: |
          python run_tests.py

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cli-test-results
          path: packages/railtracks-cli/test-results.xml
          if-no-files-found: ignore